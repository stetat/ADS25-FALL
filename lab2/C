#include <iostream>

using namespace std;

class Node {
    public:
    int data;
    Node *next;

    Node(int data) {
        this->data = data;
        this->next = NULL;
    }
};

class linked_list {
    public:
    Node *front;
    int sz;

    linked_list() {
        front = NULL;
        sz = 0;
    }

    void push_back(int data) {
        Node *n = new Node(data);
        if( sz == 0) {
            front = n;
            sz++;
            return;
        }

        Node *cur = front;

        while(cur->next) {
            cur = cur->next;
        }

        cur->next = n;
        sz++;
        
    }

    void remove_dp() {
        Node *cur = front;
        while(cur && cur->next) {
            Node *temp = cur->next;
            cur->next = cur->next->next;
            delete temp;
            cur = cur->next;
            sz--;
            
        }
    }

    void pop() {
        if(sz != 0 ) {
        front = front->next;
        sz--;
        }
    }

    bool empty() {
        return sz == 0;
    }

};

int main() {
    int n, k;
    linked_list file;
    cin >> n;

    for(int i = 0; i<n; i++) {
        cin >> k;
        file.push_back(k);
        
    }

   file.remove_dp();

    while(!file.empty()) {
        cout << file.front->data << " ";
        file.pop();
    }

    

}