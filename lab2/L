#include <iostream>
#include <cmath>

using namespace std;

class Node {
    public:
    int data;
    Node *next;

    Node(int data) {
        this->data = data;
        this->next = NULL;
    }
};

class linked_list {
    public:
    int sz;
    Node *front;
    Node *back;

    linked_list() {
        sz = 0;
        front = NULL;
    }

    void push_back(int data) {
        Node *n = new Node(data);
        if (sz == 0) {
            front = back = n;
            sz++;
            return;

        }

        back->next = n;
        back = n;
        sz++;

    }

    int maxSum() {
        int maxS = front->data;
        int curS = 0;

        bool dummy = false;

        Node *cur = front;

        while(cur) {
            curS+=cur->data;

            if(curS >= maxS) maxS = curS;

            if(front->data < 0 && !dummy) {
                curS = 0;
                dummy = true;
            }

            if(curS < 0) {
                curS = 0;
            }

            cur = cur->next;

            

        }

        return maxS;


    }

};

int main() {
    linked_list list;
    int n,c;
    cin >> n;

    for(int i = 0; i<n; i++) {
        cin>>c;
        list.push_back(c);

    }

    cout<< list.maxSum() << endl;

}

